setwd("~/GitHub/bls-wt-comp-2022/scripts-meas")
rm(list = ls())
source('functions.R')
source('packages.R')
source('load.R')
source('subset.R')
source('clean.R')
source('summary.R')
render('stats.Rmd', output_dir = '../output')
source('export.R')
source('export_check.R')
source('plot_big.R')
dd <- subset(idat, cta <= 15 & app.date == '2021-08-20')
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
ggplot(isumm, aes(aer, e.rel.final, colour = trial.nm, shape = trial.nm)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial.nm), lty = 2) +
geom_point(cex = 2) +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial.nm, shape = trial.nm)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial.nm), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(set1) +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial.nm, shape = trial.nm)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial.nm), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = set1) +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial.nm, shape = trial.nm)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial.nm), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial, shape = trial)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
isumm <- idat[, list(cta = max(cta),
air.temp.mean = mean(air.temp),
air.temp.min = min(air.temp),
air.temp.max = max(air.temp),
wind.2m.mean = mean(wind.2m),
wind.2m.min = min(wind.2m),
wind.2m.max = max(wind.2m),
rain.cum = max(rain.cum),
rain.cum.48 = max(rain.cum * (cta <= 48)),
j.NH3.mean = mean(j.NH3),
j.NH3.min = min(j.NH3),
j.NH3.max = max(j.NH3),
e.cum.final = max(e.cum),
e.rel.final = max(e.rel),
e.cum.168 = approx(cta, e.cum, xout = 168)$y,
e.rel.168 = approx(cta, e.rel, xout = 168)$y
), by = list(trial, app.date, pmid, meas.tech, meas.tech2, aer, aer.grp)]
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial, shape = trial)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = app.date, shape = app.date)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = app.date, shape = app.date)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = app.date), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
ggsave2x('../plots-meas/30_emis_vs_AER', height = 4, width = 3.6)
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
setwd("~/GitHub/bls-wt-comp-2022/scripts-pH")
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = covered) +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
View(ds)
# Create surface pH plots
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'covered')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggsave2x('../plots-pH/40_surface_pH', height = 3, width = 7)
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggsave2x('../plots-pH/40_surface_pH', height = 3, width = 7)
ggplot(ds, aes(ct, pH, colour = covered)) +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
setwd("~/GitHub/bls-wt-comp-2022/scripts-ALFAM2")
rm(list = ls())
source('functions.R')
source('packages.R')
# Load workspace only to skip calibration
#source('load_workspace.R')
source('load.R')
source('subset.R')
knit('run_ALFAM2.Rmd', output = '../logs/rum_ALFAM2.md')
source('cal1.R')
source('cal2.R')
setwd("~/GitHub/bls-wt-comp-2022/scripts-ALFAM2")
# Wind tunnel / bLS comparison using ALFAM2 model fitting
rm(list = ls())
source('functions.R')
source('packages.R')
# Load workspace only to skip calibration
#source('load_workspace.R')
source('load.R')
source('subset.R')
knit('run_ALFAM2.Rmd', output = '../logs/rum_ALFAM2.md')
source('cal1.R')
source('cal2.R')
source('extract_pars.R')
source('extract_preds.R')
source('export.R')
# Plots
# Flux ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dfl$variable.nm <- factor(dfl$variable, levels = c('j.NH3', 'j.preda', 'j.predb', 'j.pred2'),
labels = c('Measured', 'ALFAM2\ncal. A', 'ALFAM2\ncal. B', 'ALFAM2\npar. set 2'))
dfl$trial.nm <- paste(dfl$trial, as.character(as.POSIXct(dfl$app.date), format = '%d %b'))
#dd <- subset(dfl, variable != 'j.pred2' & bta >= 0)
dd <- subset(dfl, bta >= -2)
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
# Flux par set 2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dd <- subset(dfl, variable %in% c('j.NH3', 'j.pred2'))
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
# Residuals ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drl$variable.nm <- factor(drl$variable, levels = c('aerra', 'aerrb', 'aerr2'),
labels = c('ALFAM2\ncal. A', 'ALFAM2\ncal. B', 'ALFAM2\npar. set 2'))
drl$trial.nm <- paste(drl$trial, as.character(as.POSIXct(drl$app.date), format = '%d %b'))
#dd <- subset(drl, variable != 'aerr2')
dd <- subset(drl, bta > -2)
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
# Residuals par set 2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
drl$variable.nm <- factor(drl$variable, levels = c('aerra', 'aerrb', 'aerr2'),
labels = c('ALFAM2 cal. A', 'ALFAM2 cal. B', 'ALFAM2 par. set 2'))
dd <- drl
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
# Early emission contribution ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dcl$variable.nm <- factor(dcl$variable, levels = c('ecrela', 'ecrelb', 'ecrel2'),
labels = c('ALFAM2 cal. A', 'ALFAM2 cal. B', 'ALFAM2 par. set 2'))
dcl$trial.nm <- paste(dcl$trial, as.character(as.POSIXct(dcl$app.date), format = '%d %b'))
dd <- subset(dcl, variable != 'ecrel2' & bta <= 11.5)
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
# r1 par ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
d.pred$trial.nm <- paste(d.pred$trial, as.character(as.POSIXct(d.pred$app.date), format = '%d %b'))
dd <- d.pred
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
# 168 h cumulative emission meas and ALFAM2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
d.pred.168$trial.nm <- paste(d.pred.168$trial, as.character(as.POSIXct(d.pred.168$app.date), format = '%d %b'))
dd <- d.pred.168
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
View(dw)
ggplot(dw, aes(er.predb, e.rel, group = pmid, shape = trial.nm)) +
geom_abline(intercept = 0, slope = 1, lty = 1, col = 'gray45') +
geom_abline(intercept = 0, slope = c(0.8, 1.2), lty = '11', col = 'gray75') +
geom_point(aes(colour = wind.2m), size = 2) +
geom_point(data = db, aes(size = meas.tech), colour = 'red') +
scale_shape_manual(values = c(1, 6, 20)) +
xlim(0, 0.75) + ylim(0, 0.75) +
guides(shape = guide_legend(override.aes = list(colour = 'black', size = 2))) +
theme_bw() +
theme(legend.text = element_text(size=9), legend.title = element_text(size=9), legend.key.height = unit(0.3, 'cm')) +
labs(x = 'ALFAM2 cal. B', y = 'Measured', shape = 'Date', colour = 'Wind tun. (m/s)', size = '')
ggplot(dw, aes(er.predb, e.rel, group = pmid, shape = app.date)) +
geom_abline(intercept = 0, slope = 1, lty = 1, col = 'gray45') +
geom_abline(intercept = 0, slope = c(0.8, 1.2), lty = '11', col = 'gray75') +
geom_point(aes(colour = wind.2m), size = 2) +
geom_point(data = db, aes(size = meas.tech), colour = 'red') +
scale_shape_manual(values = c(1, 6, 20)) +
xlim(0, 0.75) + ylim(0, 0.75) +
guides(shape = guide_legend(override.aes = list(colour = 'black', size = 2))) +
theme_bw() +
theme(legend.text = element_text(size=9), legend.title = element_text(size=9), legend.key.height = unit(0.3, 'cm')) +
labs(x = 'ALFAM2 cal. B', y = 'Measured', shape = 'Date', colour = 'Wind tun. (m/s)', size = '')
ggsave2x('../plots-ALFAM2/90_cum_emis_comp', height = 2.5, width = 4.0, scale = 1.1)
# 168 h cumulative emission meas and ALFAM2 par set 2 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dd <- d.pred.168
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
ggplot(dw, aes(er.pred2, e.rel, group = pmid, shape = app.date)) +
geom_abline(intercept = 0, slope = 1, lty = 1, col = 'gray45') +
geom_abline(intercept = 0, slope = c(0.8, 1.2), lty = '11', col = 'gray75') +
geom_point(aes(colour = wind.2m), size = 2) +
geom_point(data = db, aes(size = meas.tech), colour = 'red') +
scale_shape_manual(values = c(1, 6, 20)) +
xlim(0, 0.65) + ylim(0, 0.65) +
theme_bw() +
guides(shape = guide_legend(override.aes = list(colour = 'black', size = 2))) +
theme_bw() +
theme(legend.text = element_text(size=9), legend.title = element_text(size=9), legend.key.height = unit(0.3, 'cm')) +
labs(x = 'ALFAM2 par. set 2', y = 'Measured', shape = 'Date', colour = 'Wind tun. (m/s)', size = '')
ggsave2x('../plots-ALFAM2/91_cum_emis_comp_ps2', height = 2.5, width = 4.0, scale = 1.1)
# Plots
# Flux ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
dfl$variable.nm <- factor(dfl$variable, levels = c('j.NH3', 'j.preda', 'j.predb', 'j.pred2'),
labels = c('Measured', 'ALFAM2\ncal. A', 'ALFAM2\ncal. B', 'ALFAM2\npar. set 2'))
dfl$trial.nm <- paste(dfl$trial, as.character(as.POSIXct(dfl$app.date), format = '%d %b'))
#dd <- subset(dfl, variable != 'j.pred2' & bta >= 0)
dd <- subset(dfl, bta >= -2)
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
ggplot(dw, aes(bta, value, group = pmid)) +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_grid(variable.nm ~ trial.nm) +
coord_cartesian(xlim = c(0, 168), ylim =c(0, 7.5)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression('NH'[3]~'flux'~('kg N h'^'-1'~ha^'-1')),
colour = 'Wind tunnel ave. velocity (m/s):', lty = '') +
theme(legend.position = 'top')
ggplot(dw, aes(bta, value, group = pmid)) +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_grid(variable.nm ~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim =c(0, 7.5)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression('NH'[3]~'flux'~('kg N h'^'-1'~ha^'-1')),
colour = 'Wind tunnel ave. velocity (m/s):', lty = '') +
theme(legend.position = 'top')
ggsave2x('../plots-ALFAM2/50_flux_comp', height = 5, width = 7)
ggplot(dw, aes(bta, value, group = pmid)) +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_grid(variable.nm ~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim =c(0, 7.5)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression('NH'[3]~'flux'~('kg N h'^'-1'~ha^'-1')),
colour = 'Wind tunnel ave. velocity (m/s):', lty = '') +
theme(legend.position = 'top') +
xlim(0, 50)
ggplot(dw, aes(bta, value, group = pmid)) +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_grid(variable.nm ~ app.date) +
coord_cartesian(xlim = c(0, 50), ylim =c(0, 7.5)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression('NH'[3]~'flux'~('kg N h'^'-1'~ha^'-1')),
colour = 'Wind tunnel ave. velocity (m/s):', lty = '') +
theme(legend.position = 'top')
ggsave2x('../plots-ALFAM2/50_flux_comp_zoom', height = 5, width = 7)
drl$variable.nm <- factor(drl$variable, levels = c('aerra', 'aerrb', 'aerr2'),
labels = c('ALFAM2\ncal. A', 'ALFAM2\ncal. B', 'ALFAM2\npar. set 2'))
drl$trial.nm <- paste(drl$trial, as.character(as.POSIXct(drl$app.date), format = '%d %b'))
#dd <- subset(drl, variable != 'aerr2')
dd <- subset(drl, bta > -2)
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
ggplot(dw, aes(bta, value, group = pmid)) +
geom_hline(yintercept = 0, lty = 1, colour = 'gray45') +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_grid(variable.nm ~ trial.nm) +
coord_cartesian(xlim =c(0, 168)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression('Error in NH'[3]~'flux'~('kg N h'^'-1'~ha^'-1')),
colour = 'Wind tunnel ave. velocity (m/s):', lty = '') +
theme(legend.position = 'top')
ggplot(dw, aes(bta, value, group = pmid)) +
geom_hline(yintercept = 0, lty = 1, colour = 'gray45') +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_grid(variable.nm ~ app.date) +
coord_cartesian(xlim =c(0, 168)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression('Error in NH'[3]~'flux'~('kg N h'^'-1'~ha^'-1')),
colour = 'Wind tunnel ave. velocity (m/s):', lty = '') +
theme(legend.position = 'top')
ggsave2x('../plots-ALFAM2/60_error_comp', height = 4, width = 7)
ggplot(dw, aes(bta, value, group = pmid)) +
geom_hline(yintercept = 0, lty = 1, colour = 'gray45') +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_grid(variable.nm ~ app.date) +
coord_cartesian(xlim =c(0, 50)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression('Error in NH'[3]~'flux'~('kg N h'^'-1'~ha^'-1')),
colour = 'Wind tunnel ave. velocity (m/s):', lty = '') +
theme(legend.position = 'top')
ggsave2x('../plots-ALFAM2/60_error_comp_zoom', height = 4, width = 7)
# r1 par ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
d.pred$trial.nm <- paste(d.pred$trial, as.character(as.POSIXct(d.pred$app.date), format = '%d %b'))
dd <- d.pred
dw <- dd[dd$meas.tech == 'Wind tunnel', ]
db <- dd[dd$meas.tech == 'bLS', ]
ggplot(dw, aes(bta, r1.predb, group = pmid)) +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_wrap(~ trial.nm) +
coord_cartesian(xlim = c(0, 168)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression(italic('r')[1]~('h'^'-1'))) +
theme(legend.position = 'none')
ggplot(dw, aes(bta, r1.predb, group = pmid)) +
geom_step(aes(colour = wind.2m), lwd = 0.5, alpha = 0.8) +
geom_step(data = db, aes(lty = meas.tech), lwd = 0.5, alpha = 0.8, colour = 'red') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168)) +
theme_bw() +
labs(x = 'Elapsed time (h)', y = expression(italic('r')[1]~('h'^'-1'))) +
theme(legend.position = 'none')
ggsave2x('../plots-ALFAM2/80_r1', height = 3, width = 7)
