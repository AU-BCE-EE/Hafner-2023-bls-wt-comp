setwd("~/GitHub/bls-wt-comp-2022/scripts-meas")
rm(list = ls())
source('functions.R')
source('packages.R')
source('load.R')
source('subset.R')
source('clean.R')
source('summary.R')
render('stats.Rmd', output_dir = '../output')
source('export.R')
source('export_check.R')
source('plot_big.R')
dd <- subset(idat, cta <= 15 & app.date == '2021-08-20')
dd$j.NH3[grepl('i', dd$flag.int)] <- NA
ggplot(isumm, aes(aer, e.rel.final, colour = trial.nm, shape = trial.nm)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial.nm), lty = 2) +
geom_point(cex = 2) +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial.nm, shape = trial.nm)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial.nm), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(set1) +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial.nm, shape = trial.nm)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial.nm), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = set1) +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial.nm, shape = trial.nm)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial.nm), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial, shape = trial)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
isumm <- idat[, list(cta = max(cta),
air.temp.mean = mean(air.temp),
air.temp.min = min(air.temp),
air.temp.max = max(air.temp),
wind.2m.mean = mean(wind.2m),
wind.2m.min = min(wind.2m),
wind.2m.max = max(wind.2m),
rain.cum = max(rain.cum),
rain.cum.48 = max(rain.cum * (cta <= 48)),
j.NH3.mean = mean(j.NH3),
j.NH3.min = min(j.NH3),
j.NH3.max = max(j.NH3),
e.cum.final = max(e.cum),
e.rel.final = max(e.rel),
e.cum.168 = approx(cta, e.cum, xout = 168)$y,
e.rel.168 = approx(cta, e.rel, xout = 168)$y
), by = list(trial, app.date, pmid, meas.tech, meas.tech2, aer, aer.grp)]
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = trial, shape = trial)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = app.date, shape = app.date)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = trial), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
# Emission versus AER
ggplot(isumm, aes(aer, e.rel.final, colour = app.date, shape = app.date)) +
geom_hline(data = subset(isumm, meas.tech == 'bLS'), aes(yintercept = e.rel.final, colour = app.date), lty = 2) +
geom_point(cex = 2) +
scale_color_brewer(palette = 'Set1') +
labs(x = expression('Air exchange rate'~('vol vol'^'-1'~'min'^'-1')), y = expression('168 h emission'~('frac. applied TAN')), colour = '', shape = '') +
theme_bw() +
theme(legend.position = 'top')
ggsave2x('../plots-meas/30_emis_vs_AER', height = 4, width = 3.6)
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
setwd("~/GitHub/bls-wt-comp-2022/scripts-pH")
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = covered) +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
View(ds)
# Create surface pH plots
rm(list = ls())
source('packages.R')
source('functions.R')
source('load.R')
source('clean.R')
ds$ymin <- ds$pH - ds$s
ds$ymax <- ds$pH + ds$s
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'covered')
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggsave2x('../plots-pH/40_surface_pH', height = 3, width = 7)
ggplot(ds, aes(ct, pH, colour = covered)) +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
ggsave2x('../plots-pH/40_surface_pH', height = 3, width = 7)
ggplot(ds, aes(ct, pH, colour = covered)) +
scale_color_brewer(palette = 'Set1') +
scale_fill_brewer(palette = 'Set1') +
geom_ribbon(aes(ymin = ymin, ymax = ymax, fill = covered), alpha = 0.2, colour = 'white') +
geom_line() +
geom_point() +
facet_wrap(~ app.date) +
coord_cartesian(xlim = c(0, 168), ylim = c(6.7, 9.2)) +
theme_bw() +
theme(legend.position = 'top') +
labs(x = 'Time after application (h)', y = 'Surface pH', colour = '') +
guides(fill = 'none')
setwd("~/GitHub/bls-wt-comp-2022/scripts-ALFAM2")
rm(list = ls())
source('functions.R')
source('packages.R')
# Load workspace only to skip calibration
#source('load_workspace.R')
source('load.R')
source('subset.R')
knit('run_ALFAM2.Rmd', output = '../logs/rum_ALFAM2.md')
source('cal1.R')
source('cal2.R')
